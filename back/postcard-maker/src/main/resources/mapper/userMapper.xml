<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louie.coding.dao.UserDao">
    <insert id="addUser" parameterType="com.louie.coding.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user
            (username, `password`, email, salt, createTime, isPremium)
        values (#{username}, #{password}, #{email}, #{salt}, #{createTime}, #{isPremium})
    </insert>

    <select id="getUserByEmail" parameterType="java.lang.String" resultType="com.louie.coding.entity.User">
        select id,
               username,
               `password`,
               email,
               createTime,
               updateTime,
               salt,
               isPremium
        from t_user
        where email = #{email}
    </select>

    <select id="getIsPremiumByUserId" parameterType="java.lang.Long" resultType="java.lang.Boolean">
        select isPremium
        from t_user
        where id = #{id}
    </select>

    <insert id="addRefreshToken" parameterType="com.louie.coding.entity.RefreshTokenDetail">
        insert into t_refresh_token
            (token, userId, createTime)
        values (#{token}, #{userId}, #{createTime})
    </insert>

    <select id="getRefreshTokenDetail" parameterType="java.lang.String"
            resultType="com.louie.coding.entity.RefreshTokenDetail">
        select id, token, userId, createTime
        from t_refresh_token
        where token = #{token}
    </select>

    <delete id="deleteRefreshTokenByToken">
        delete
        from t_refresh_token
        where token = #{token}
    </delete>

    <update id="updatePassword" parameterType="com.louie.coding.entity.User">
        update t_user
        set `password` = #{password}
          , updateTime = #{updateTime}
        where id = #{id}
    </update>

    <delete id="deleteRefreshTokenByUserId">
        delete
        from t_refresh_token
        where userId = #{userId}
    </delete>

    <delete id="deleteRefreshTokenByUserIdAndToken">
        delete
        from t_refresh_token
        where userId = #{userId}
          and token = #{token}
    </delete>
</mapper>